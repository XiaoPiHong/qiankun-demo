
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # qiankun主应用
    server {
        listen       5173;
        server_name  localhost;

        location / {
            root   D:\code\qiankun-demo\main\dist;
        }

        # 主应用 base 属性默认为 /，读取静态资源的路径大致为/asstes/index-xxx.js。当直接访问子应用（也就是访问 www.xxx.cn:7241），是没有影响的，因为访问的就是子应用根目录下的静态资源。但是如果是通过主应用来进行访问该路径(/asstes/index-xxx.js)，那么根目录就是主应用的根目录，那么就会存在找不到文件的错误问题，导致加载子应用不成功，所以这里需要
        # 如果不想做下面的转发也是可以的，只需要把子应用打包的资源dist放到主应用的根目录下，并命名为app-vue3
        location /app-vue3/ {
            proxy_pass http://127.0.0.1:5173/app-vue3/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass https://prod.api.com;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # qiankun vue3微应用
    server {
        listen       5174;
        server_name  localhost;

        location / {
            root   D:\code\qiankun-demo\web\vue3\dist;

            # 对所有请求添加 CORS 头部，允许所有来源（这个一定要写到location内部，写到外部会生成两个相同的请求头导致跨域抛出错误）
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # 由于主和子应用是分开部署，所以资源是需要做转发的，如果主和子应用的base都为/，那么就无法有前缀来做转发区分，所以子应用的base必须为/app-vue3/，这就导致子应用引入的静态资源的路径都是包含app-vue3的，所以在子应用单独访问时，需要将请求到app-vue3路径下的资源转发回根目录下
        location /app-vue3/ {
            proxy_pass http://127.0.0.1:5174/;  # 代理到当前服务的根目录
            rewrite ^/app-vue3(/.*)$ $1 break;  # 去掉路径前缀，重写为根路径
        }

        location /api {
            proxy_pass https://prod.api.com;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
