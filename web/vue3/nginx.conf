user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 5174;  # 子应用监听 5174 端口
        server_name _;

        location / {
            root /usr/share/nginx/html/vue3;
            try_files $uri $uri/ /index.html;

            # 允许跨域
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }

        # 主应用 base 属性默认为 /，读取静态资源的路径大致为/asstes/index-xxx.js。当直接访问子应用（也就是访问 www.xxx.cn:7241），是没有影响的，因为访问的就是子应用根目录下的静态资源。但是如果是通过主应用来进行访问该路径(/asstes/index-xxx.js)，那么根目录就是主应用的根目录，那么就会存在找不到文件的错误问题，导致加载子应用不成功，所以这里需要
        # 如果不想做下面的转发也是可以的，只需要把子应用打包的资源dist放到主应用的根目录下，并命名为app-vue3
        location /app-vue3/ {
            proxy_pass http://172.21.0.3:5174/app-vue3/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://172.20.0.4:3000;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

